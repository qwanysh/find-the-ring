{"version":3,"sources":["store/contextProvider.js","utils.js","consts.js","store/reducer.js","store/actionTypes.js","components/UI/Button/Button.js","components/ControlPanel/ControlPanel.js","store/actions.js","components/ChestContainer/Chest/Chest.js","components/GameStatusCaption/GameStatusCaption.js","components/ChestContainer/ChestContainer.js","components/Game/Game.js","components/Menu/Menu.js","containers/App/App.js","index.js"],"names":["Context","createContext","ContextProvider","state","dispatch","children","Provider","value","createChests","amount","index","random","range","map","i","createChest","countOpenedChests","chests","filter","chest","isOpen","hasRing","length","GameStatus","GameEndPhrases","reducer","type","payload","gameStatus","newState","targetChest","CHEST_COUNT","find","Button","props","className","disabled","onClick","ControlPanel","useContext","openedChests","attemptsMade","to","Chest","openChest","classes","push","join","GameStatusCaption","ChestContainer","key","Game","Menu","App","useReducer","basename","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29366168.chunk.js","sourcesContent":["import React, { createContext } from 'react';\n\nexport const Context = createContext();\n\nconst ContextProvider = ({ state, dispatch, children }) => {\n  return (\n    <Context.Provider value={[state, dispatch]}>{children}</Context.Provider>\n  );\n};\n\nexport default ContextProvider;\n","import { random, range } from 'lodash';\n\nexport const createChests = (amount) => {\n  const index = random(0, amount - 1);\n  return range(amount).map((i) => createChest(i === index));\n};\n\nexport const countOpenedChests = (chests) => {\n  return chests.filter((chest) => chest.isOpen && !chest.hasRing).length;\n};\n\nexport const getChestWithRing = (chests) => {\n  return chests.find((chest) => chest.hasRing);\n};\n\nconst createChest = (hasRing = false) => ({ hasRing, isOpen: false });\n","export const CHEST_COUNT = 36;\nexport const MAX_ATTEMPTS = CHEST_COUNT / 2;\nexport const DANGER_ATTEMPTS = 5;\n\nexport const GameStatus = {\n  IN_PROGRESS: 'IN_PROGRESS',\n  DEFEAT: 'DEFEAT',\n  VICTORY: 'VICTORY',\n};\n\nexport const GameEndPhrases = {\n  [GameStatus.DEFEAT]: 'You lose!',\n  [GameStatus.VICTORY]: 'You found it!',\n};\n","import { OPEN_CHEST, RESTART_GAME } from './actionTypes';\nimport { CHEST_COUNT, MAX_ATTEMPTS, GameStatus } from '../consts';\nimport { createChests, countOpenedChests, getChestWithRing } from '../utils';\n\nconst reducer = (state, { type, payload }) => {\n  switch (type) {\n    case OPEN_CHEST:\n      if (state.gameStatus === GameStatus.IN_PROGRESS) {\n        const newState = { ...state };\n        const targetChest = newState.chests[payload];\n        targetChest.isOpen = true;\n        if (targetChest.hasRing) {\n          newState.gameStatus = GameStatus.VICTORY;\n        } else if (countOpenedChests(newState.chests) === MAX_ATTEMPTS) {\n          newState.gameStatus = GameStatus.DEFEAT;\n          getChestWithRing(newState.chests).isOpen = true;\n        }\n        return newState;\n      }\n      return state;\n\n    case RESTART_GAME:\n      return {\n        ...state,\n        chests: createChests(CHEST_COUNT),\n        gameStatus: GameStatus.IN_PROGRESS,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const OPEN_CHEST = 'OPEN_CHEST';\nexport const RESTART_GAME = 'RESTART_GAME';\n","import React from 'react';\nimport './Button.css';\n\nconst Button = (props) => {\n  return (\n    <button\n      className=\"Button\"\n      disabled={props.disabled}\n      onClick={props.onClick}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import { MAX_ATTEMPTS, DANGER_ATTEMPTS, GameStatus } from '../../consts';\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Context } from '../../store/contextProvider';\nimport { restartGame } from '../../store/actions';\nimport { countOpenedChests } from '../../utils';\nimport Button from '../UI/Button/Button';\nimport './ControlPanel.css';\n\nconst ControlPanel = () => {\n  const [state, dispatch] = useContext(Context);\n  const { gameStatus, chests } = state;\n  const openedChests = countOpenedChests(chests);\n  let attemptsMade = MAX_ATTEMPTS - openedChests;\n\n  if (attemptsMade <= DANGER_ATTEMPTS) {\n    attemptsMade = (\n      <span className=\"ControlPanel__text--danger\">{attemptsMade}</span>\n    );\n  }\n\n  return (\n    <div className=\"ControlPanel\">\n      <p className=\"ControlPanel__text\">\n        Attempts left: {attemptsMade}/{MAX_ATTEMPTS}\n      </p>\n      <Button\n        disabled={openedChests === 0 && gameStatus === GameStatus.IN_PROGRESS}\n        onClick={() => dispatch(restartGame())}\n      >\n        Restart\n      </Button>\n      <Link to=\"/\">\n        <Button>Go to Menu</Button>\n      </Link>\n    </div>\n  );\n};\n\nexport default ControlPanel;\n","import { OPEN_CHEST, RESTART_GAME } from './actionTypes';\n\nexport const openChest = (chestIndex) => ({\n  type: OPEN_CHEST,\n  payload: chestIndex,\n});\n\nexport const restartGame = () => ({ type: RESTART_GAME });\n","import React from 'react';\nimport './Chest.css';\n\nconst Chest = ({ chest, openChest }) => {\n  const classes = ['Chest'];\n  if (chest.isOpen) {\n    classes.push('Chest--open');\n    if (chest.hasRing) {\n      classes.push('Chest--has-ring');\n    }\n  }\n\n  return <div className={classes.join(' ')} onClick={openChest} />;\n};\n\nexport default Chest;\n","import React, { useContext } from 'react';\nimport { GameEndPhrases } from '../../consts';\nimport { Context } from '../../store/contextProvider';\nimport './GameStatusCaption.css';\n\nconst GameStatusCaption = () => {\n  const [state] = useContext(Context);\n  const { gameStatus } = state;\n\n  return (\n    <div className=\"GameStatusCaption\">\n      <p className=\"GameStatusCaption__text\">{GameEndPhrases[gameStatus]}</p>\n    </div>\n  );\n};\n\nexport default GameStatusCaption;\n","import React, { useContext } from 'react';\nimport { GameStatus } from '../../consts';\nimport { Context } from '../../store/contextProvider';\nimport { openChest } from '../../store/actions';\nimport Chest from './Chest/Chest';\nimport GameStatusCaption from '../GameStatusCaption/GameStatusCaption';\nimport './ChestContainer.css';\n\nconst ChestContainer = () => {\n  const [state, dispatch] = useContext(Context);\n  const { gameStatus, chests } = state;\n\n  return (\n    <div className=\"ChestContainer\">\n      {chests.map((chest, index) => (\n        <Chest\n          key={index}\n          chest={chest}\n          index={index}\n          openChest={() => dispatch(openChest(index))}\n        />\n      ))}\n      {gameStatus !== GameStatus.IN_PROGRESS && <GameStatusCaption />}\n    </div>\n  );\n};\n\nexport default ChestContainer;\n","import React from 'react';\nimport ControlPanel from '../ControlPanel/ControlPanel';\nimport ChestContainer from '../ChestContainer/ChestContainer';\n\nconst Game = () => {\n  return (\n    <>\n      <ChestContainer />\n      <ControlPanel />\n    </>\n  );\n};\n\nexport default Game;\n","import React from 'react';\nimport Button from '../UI/Button/Button';\nimport { Link } from 'react-router-dom';\nimport './Menu.css';\n\nconst Menu = () => {\n  return (\n    <>\n      <div className=\"Menu__ring\" />\n      <Link to=\"/game\">\n        <Button>Start Game</Button>\n      </Link>\n    </>\n  );\n};\n\nexport default Menu;\n","import React, { useReducer } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Redirect, Route, Switch } from 'react-router';\nimport ContextProvider from '../../store/contextProvider';\nimport { createChests } from '../../utils';\nimport { CHEST_COUNT, GameStatus } from '../../consts';\nimport reducer from '../../store/reducer';\nimport Game from '../../components/Game/Game';\nimport Menu from '../../components/Menu/Menu';\nimport './App.css';\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, {\n    gameStatus: GameStatus.IN_PROGRESS,\n    chests: createChests(CHEST_COUNT),\n  });\n\n  return (\n    <ContextProvider state={state} dispatch={dispatch}>\n      <BrowserRouter basename=\"/find-the-ring/\">\n        <div className=\"App\">\n          <div className=\"App__container\">\n            <h1 className=\"App__heading\">Find the ring</h1>\n            <Switch>\n              <Route path=\"/game\" exact>\n                <Game />\n              </Route>\n              <Route path=\"/\" exact>\n                <Menu />\n              </Route>\n              <Route path=\"/\">\n                <Redirect to=\"/\" />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n    </ContextProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}